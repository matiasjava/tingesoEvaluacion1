version: "3.8"
services:
  # Nginx servers
  nginx-backend:
    image: nginx
    container_name: kartingrm-nginx-backend-container
    restart: always
    ports:
      - 8090:80
    volumes:
      - ./backend.conf:/etc/nginx/nginx.conf
    networks:
      - kartingrm-network
    depends_on:
      - spring1
      - spring2
      - spring3      
  nginx-frontend:
    image: nginx
    container_name: kartingrm-nginx-frontend-container
    restart: always
    ports:
      - 3000:3000
    volumes:
      - ./frontend.conf:/etc/nginx/nginx.conf
    networks:
      - kartingrm-network
    depends_on:      
      - react1
      - react2
      - react3
  spring1:
    container_name: kartingrm-backend-container-1
    image: matiasvejar/kartingrm-backend
    ports:
      - 8091:8090
    environment:
      
      
    networks:
      - kartingrm-network
    deploy:
      restart_policy:
        condition: on-failure
  spring2:
    container_name: kartingrm-backend-container-2
    image: matiasvejar/kartingrm-backend
    ports:
      - 8092:8090
    environment:
      
    networks:
      - kartingrm-network
    deploy:
      restart_policy:
        condition: on-failure
  spring3:
    container_name: kartingrm-backend-container-3
    image: matiasvejar/kartingrm-backend
    ports:
      - 8093:8090
    environment:
      
    networks:
      - kartingrm-network
    deploy:
      restart_policy:
        condition: on-failure
  react1:
    container_name: kartingrm-frontend-container-1
    image: matiasvejar/kartingrm-frontend
    ports:
      - 3001:3000
    networks:
      - kartingrm-network
    deploy:
      restart_policy:
        condition: on-failure
  react2:
    container_name: kartingrm-frontend-container-2
    image: matiasvejar/kartingrm-frontend
    ports:
      - 3002:3000
    networks:
      - kartingrm-network
    deploy:
      restart_policy:
        condition: on-failure
  react3:
    container_name: kartingrm-frontend-container-3
    image: matiasvejar/kartingrm-frontend
    ports:
      - 3003:3000
    networks:
      - kartingrm-network
    deploy:
      restart_policy:
        condition: on-failure

networks:
  kartingrm-network:
    driver: bridge
